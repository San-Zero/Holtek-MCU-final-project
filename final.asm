include HT66F70A.inc

ds		.section		'data'
DEL1		DB		?	;DELAY變數
DEL2		DB		?	;DELAY變數
DEL3		DB		?	;DELAY變數
DC_FLAG		DBIT		
LINE_COUNT	DB		?
LINE_COUNT1 DB		?	;LCM第一列字數控制
LINE_COUNT2 DB		?	;LCM第二列字數控制
DATA		DB		?	;LCM表格資料

STACK_A		DB		?
STACK_PSW	DB		?
STACK_DEL1 	DB		?
STACK_DEL2 	DB		?
STACK_DEL3 	DB		?
STACK_LINE_COUNT1	DB	?
STACK_LINE_COUNT2	DB	?
STACK_DATA	DB		?
STACK_TBHP	DB		?
STACK_TBLP	DB		?

DELA 	DB ?	;BEEP DELAY
PITCH	DB ?	;音調控制	
COUNT1 	DB ?	;音長控制
COUNT2 	DB ?	;音長控制

LCM_EN		EQU		PE.2
LCM_RW		EQU		PE.1
LCM_RS		EQU		PE.0
LCM_ENC		EQU		PEC.2
LCM_RWC		EQU		PEC.1
LCM_RSC		EQU		PEC.0
LCM_DATAPORT	EQU	PG
LCM_DATAPORTC	EQU	PGC

ROMBANK	0 cs

cs		.section	at	00h		'code'
	ORG		00H
	JMP		INIT
	ORG		04H
	JMP		ISR_EXTINT0	
	ORG		08H
	JMP		ISR_EXTINT1	
	ORG		30H
	JMP		ISR_EXTINT2
	ORG		34H
	JMP		ISR_EXTINT3
INIT:	
	MOV		A,10101111B
	MOV		WDTC,A
	CALL	INIT_LCM
	
	MOV		A,10101010B
	MOV		INTEG,A
	
	SET		PAPU.3
	SET		PAC.3
	SET		INT0E
	
	SET		PAPU.4
	SET		PAC.4
	SET		INT1E
	
	SET		PCPU.4
	SET		PCC.4
	SET		INT2E
	
	SET		PCPU.5
	SET		PCC.5
	SET		INT3E
	SET		EMI
	CALL	CLEAR_LCM
MAIN:		
	MOV		A,80H			;設定顯示第一列，位置0
	CALL	WLCMC
	CALL	DELAY
	MOV		A,HIGH 	TAB_DATA_1
	MOV		TBHP,A
	MOV		A,LOW 	TAB_DATA_1
	MOV		TBLP,A
	MOV		A,0BH
	MOV		LINE_COUNT1,A	;設定第一列字數
	MOV		A,0AH
	MOV		LINE_COUNT2,A	;設定第二列字數
MAIN_1:
	TABRD	DATA
	MOV		A,DATA			;寫入顯示資料
	CALL	WLCMD
	CALL	DELAY
	INC		TBLP
	SDZ		LINE_COUNT1		;可顯示字數是否為0?
	JMP		MAIN_1			;不是0，繼續顯示下個字
	MOV		A,0C0H			;設定顯示第二列，位置0
	CALL	WLCMC
	CALL	DELAY
MAIN_2:
	TABRD	DATA
	MOV		A,DATA			;寫入顯示資料
	CALL	WLCMD
	CALL	DELAY
	INC		TBLP
	SDZ		LINE_COUNT2		;可顯示字數是否為0?
	JMP		MAIN_2			;不是0，繼續顯示下個字
	JMP		MAIN			;不是0，繼續顯示下個字
;===========================================
;	中斷發生，撥放第1首歌曲
;===========================================
ISR_EXTINT0:
	MOV		STACK_A,A		;累加器資料暫存
	MOV		A,STATUS		
	MOV		STACK_PSW,A		;MCU狀態暫存
	MOV		A,DEL1			;DEL1變數暫存
	MOV		STACK_DEL1,A
	MOV		A,DEL2			;DEL2變數暫存
	MOV		STACK_DEL2,A
	MOV		A,DEL3			;DEL3變數暫存
	MOV		STACK_DEL3,A
	MOV		A,TBHP
	MOV		STACK_TBHP,A
	MOV		A,TBLP
	MOV		STACK_TBLP,A
	MOV		A,DATA
	MOV		STACK_DATA,A
	MOV		A,LINE_COUNT1
	MOV		STACK_LINE_COUNT1,A
	MOV		A,LINE_COUNT2
	MOV		STACK_LINE_COUNT2,A
;===========================================
;	LCM顯示
;===========================================
	CALL	CLEAR_LCM	
MAIN_INT0:
	MOV		A,80H			;設定顯示第一列，位置0
	CALL	WLCMC
	CALL	DELAY
	MOV		A,HIGH 	TAB_DATA_2
	MOV		TBHP,A
	MOV		A,LOW 	TAB_DATA_2
	MOV		TBLP,A
	MOV		A,0EH
	MOV		LINE_COUNT1,A	;設定第一列字數
	MOV		A,0EH
	MOV		LINE_COUNT2,A	;設定第二列字數
MAIN_INT0_1:
	TABRD	DATA
	MOV		A,DATA			;寫入顯示資料
	CALL	WLCMD
	CALL	DELAY
	INC		TBLP
	SDZ		LINE_COUNT1		;可顯示字數是否為0?
	JMP		MAIN_INT0_1			;不是0，繼續顯示下個字
	MOV		A,0C0H			;設定顯示第二列，位置0
	CALL	WLCMC
	CALL	DELAY
MAIN_INT0_2:
	TABRD	DATA
	MOV		A,DATA			;寫入顯示資料
	CALL	WLCMD
	CALL	DELAY
	INC		TBLP
	SDZ		LINE_COUNT2		;可顯示字數是否為0?
	JMP		MAIN_INT0_2			;不是0，繼續顯示下個字
;==========================================	
; 	歌曲
;==========================================
	CLR 	PCC.2
	MOV		A,HIGH TAB_PITCH_A
	MOV		TBHP,A
	MOV		A,LOW TAB_PITCH_A
	MOV		TBLP,A	
NEXT_PITCH_A:
	TABRD	PITCH
	CLR		ACC
	XOR		A,TBLH
	SZ		Z
	JMP		END_INT0
	MOV		COUNT1,A
	INC		TBLP
LOOP_A:
	MOV		A,10
	MOV     COUNT2,A
H1_A:
	SET 	PC.2
	MOV 	A,PITCH
	CALL 	DELAY_BEEP
	CLR		PC.2
	MOV		A,PITCH
	CALL	DELAY_BEEP
	SDZ		COUNT2
	JMP		H1_A
	SDZ		COUNT1
	JMP		LOOP_A
	MOV 	A,30
	MOV		COUNT1,A
STOP_A:
	CALL	DELAY_BEEP
	SDZ		COUNT1
	JMP 	STOP_A
	JMP		NEXT_PITCH_A
END_INT0:
	CALL	CLEAR_LCM
	MOV		A,STACK_LINE_COUNT1
	MOV		LINE_COUNT1,A
	MOV		A,STACK_LINE_COUNT2
	MOV		LINE_COUNT2,A
	MOV		A,STACK_DATA
	MOV		DATA,A
	MOV		A,STACK_TBHP
	MOV		TBHP,A
	MOV		A,STACK_TBLP
	MOV		TBLP,A
	MOV		A,STACK_DEL3	;DEL3變數回復
	MOV		DEL3,A
	MOV		A,STACK_DEL2	;DEL2變數回復
	MOV		DEL2,A
	MOV		A,STACK_DEL1	;DEL1變數回復
	MOV		DEL1,A
	MOV		A,STACK_PSW		;MCU狀態回復
	MOV		STATUS,A
	MOV		A,STACK_A		;累加器資料回復
	CLR		INT0F
	RETI
;===========================================
;	中斷發生，撥放第2首歌曲
;===========================================
ISR_EXTINT1:
	MOV		STACK_A,A		;累加器資料暫存
	MOV		A,STATUS		
	MOV		STACK_PSW,A		;MCU狀態暫存
	MOV		A,DEL1			;DEL1變數暫存
	MOV		STACK_DEL1,A
	MOV		A,DEL2			;DEL2變數暫存
	MOV		STACK_DEL2,A
	MOV		A,DEL3			;DEL3變數暫存
	MOV		STACK_DEL3,A
	MOV		A,TBHP
	MOV		STACK_TBHP,A
	MOV		A,TBLP
	MOV		STACK_TBLP,A
	MOV		A,DATA
	MOV		STACK_DATA,A
	MOV		A,LINE_COUNT1
	MOV		STACK_LINE_COUNT1,A
	MOV		A,LINE_COUNT2
	MOV		STACK_LINE_COUNT2,A
;===========================================
;	LCM顯示
;===========================================
	CALL	CLEAR_LCM
MAIN_INT1:
	MOV		A,80H			;設定顯示第一列，位置0
	CALL	WLCMC
	CALL	DELAY
	MOV		A,HIGH 	TAB_DATA_3
	MOV		TBHP,A
	MOV		A,LOW 	TAB_DATA_3
	MOV		TBLP,A
	MOV		A,07H
	MOV		LINE_COUNT1,A	;設定第一列字數
	MOV		A,04H
	MOV		LINE_COUNT2,A	;設定第二列字數
MAIN_INT1_1:
	TABRD	DATA
	MOV		A,DATA			;寫入顯示資料
	CALL	WLCMD
	CALL	DELAY
	INC		TBLP
	SDZ		LINE_COUNT1		;可顯示字數是否為0?
	JMP		MAIN_INT1_1			;不是0，繼續顯示下個字
	MOV		A,0C0H			;設定顯示第二列，位置0
	CALL	WLCMC
	CALL	DELAY
MAIN_INT1_2:
	TABRD	DATA
	MOV		A,DATA			;寫入顯示資料
	CALL	WLCMD
	CALL	DELAY
	INC		TBLP
	SDZ		LINE_COUNT2		;可顯示字數是否為0?
	JMP		MAIN_INT1_2			;不是0，繼續顯示下個字
;==========================================	
; 	歌曲撥放
;==========================================	
	CLR 	PCC.2
	MOV		A,HIGH TAB_PITCH_B
	MOV		TBHP,A
	MOV		A,LOW TAB_PITCH_B
	MOV		TBLP,A
NEXT_PITCH_B:
	TABRD	PITCH
	CLR		ACC
	XOR		A,TBLH
	SZ		Z
	JMP		END_INT1
	MOV		COUNT1,A
	INC		TBLP
LOOP_B:
	MOV		A,10
	MOV     COUNT2,A
H1_B:
	SET 	PC.2
	MOV 	A,PITCH
	CALL 	DELAY_BEEP
	CLR		PC.2
	MOV		A,PITCH
	CALL	DELAY_BEEP
	SDZ		COUNT2
	JMP		H1_B
	SDZ		COUNT1
	JMP		LOOP_B
	MOV 	A,30
	MOV		COUNT1,A
STOP_B:
	CALL	DELAY_BEEP
	SDZ		COUNT1
	JMP 	STOP_B
	JMP		NEXT_PITCH_B
END_INT1:
	CALL	CLEAR_LCM
	MOV		A,STACK_LINE_COUNT1
	MOV		LINE_COUNT1,A
	MOV		A,STACK_LINE_COUNT2
	MOV		LINE_COUNT2,A
	MOV		A,STACK_DATA
	MOV		DATA,A
	MOV		A,STACK_TBHP
	MOV		TBHP,A
	MOV		A,STACK_TBLP
	MOV		TBLP,A
	MOV		A,STACK_DEL3	;DEL3變數回復
	MOV		DEL3,A
	MOV		A,STACK_DEL2	;DEL2變數回復
	MOV		DEL2,A
	MOV		A,STACK_DEL1	;DEL1變數回復
	MOV		DEL1,A
	MOV		A,STACK_PSW		;MCU狀態回復
	MOV		STATUS,A
	MOV		A,STACK_A		;累加器資料回復
	CLR		INT1F
	RETI
;===========================================
;	中斷發生，撥放第3首歌曲
;===========================================	
ISR_EXTINT2:
	MOV		STACK_A,A		;累加器資料暫存
	MOV		A,STATUS		
	MOV		STACK_PSW,A		;MCU狀態暫存
	MOV		A,DEL1			;DEL1變數暫存
	MOV		STACK_DEL1,A
	MOV		A,DEL2			;DEL2變數暫存
	MOV		STACK_DEL2,A
	MOV		A,DEL3			;DEL3變數暫存
	MOV		STACK_DEL3,A
	MOV		A,TBHP
	MOV		STACK_TBHP,A
	MOV		A,TBLP
	MOV		STACK_TBLP,A
	MOV		A,DATA
	MOV		STACK_DATA,A
	MOV		A,LINE_COUNT1
	MOV		STACK_LINE_COUNT1,A
	MOV		A,LINE_COUNT2
	MOV		STACK_LINE_COUNT2,A	
;===========================================
;	LCM顯示
;===========================================
	CALL	CLEAR_LCM
MAIN_INT2:
	MOV		A,80H			;設定顯示第一列，位置0
	CALL	WLCMC
	CALL	DELAY
	MOV		A,HIGH 	TAB_DATA_4
	MOV		TBHP,A
	MOV		A,LOW 	TAB_DATA_4
	MOV		TBLP,A
	MOV		A,0FH
	MOV		LINE_COUNT1,A	;設定第一列字數
	MOV		A,0BH
	MOV		LINE_COUNT2,A	;設定第二列字數
MAIN_INT2_1:
	TABRD	DATA
	MOV		A,DATA			;寫入顯示資料
	CALL	WLCMD
	CALL	DELAY
	INC		TBLP
	SDZ		LINE_COUNT1		;可顯示字數是否為0?
	JMP		MAIN_INT2_1			;不是0，繼續顯示下個字
	MOV		A,0C0H			;設定顯示第二列，位置0
	CALL	WLCMC
	CALL	DELAY
MAIN_INT2_2:
	TABRD	DATA
	MOV		A,DATA			;寫入顯示資料
	CALL	WLCMD
	CALL	DELAY
	INC		TBLP
	SDZ		LINE_COUNT2		;可顯示字數是否為0?
	JMP		MAIN_INT2_2			;不是0，繼續顯示下個字
;==========================================	
; 	歌曲撥放
;==========================================	
	CLR 	PCC.2
	MOV		A,HIGH TAB_PITCH_C
	MOV		TBHP,A
	MOV		A,LOW TAB_PITCH_C
	MOV		TBLP,A
NEXT_PITCH_C:
	TABRD	PITCH
	CLR		ACC
	XOR		A,TBLH
	SZ		Z
	JMP		END_INT2
	MOV		COUNT1,A
	INC		TBLP
LOOP_C:
	MOV		A,8
	MOV     COUNT2,A
H1_C:
	SET 	PC.2
	MOV 	A,PITCH
	CALL 	DELAY_BEEP
	CLR		PC.2
	MOV		A,PITCH
	CALL	DELAY_BEEP
	SDZ		COUNT2
	JMP		H1_C
	SDZ		COUNT1
	JMP		LOOP_C
	MOV 	A,20
	MOV		COUNT1,A
STOP_C:
	CALL	DELAY_BEEP
	SDZ		COUNT1
	JMP 	STOP_C
	JMP		NEXT_PITCH_C
END_INT2:
	CALL	CLEAR_LCM
	MOV		A,STACK_LINE_COUNT1
	MOV		LINE_COUNT1,A
	MOV		A,STACK_LINE_COUNT2
	MOV		LINE_COUNT2,A
	MOV		A,STACK_DATA
	MOV		DATA,A
	MOV		A,STACK_DEL3	;DEL3變數回復
	MOV		DEL3,A
	MOV		A,STACK_DEL2	;DEL2變數回復
	MOV		DEL2,A
	MOV		A,STACK_DEL1	;DEL1變數回復
	MOV		DEL1,A
	MOV		A,STACK_PSW		;MCU狀態回復
	MOV		STATUS,A
	MOV		A,STACK_A		;累加器資料回復
	CLR		INT2F
	RETI
;===========================================
;	中斷發生，撥放第4首歌曲
;===========================================	
ISR_EXTINT3:
	MOV		STACK_A,A		;累加器資料暫存
	MOV		A,STATUS		
	MOV		STACK_PSW,A		;MCU狀態暫存
	MOV		A,DEL1			;DEL1變數暫存
	MOV		STACK_DEL1,A
	MOV		A,DEL2			;DEL2變數暫存
	MOV		STACK_DEL2,A
	MOV		A,DEL3			;DEL3變數暫存
	MOV		STACK_DEL3,A
	MOV		A,TBHP
	MOV		STACK_TBHP,A
	MOV		A,TBLP
	MOV		STACK_TBLP,A
	MOV		A,DATA
	MOV		STACK_DATA,A
	MOV		A,LINE_COUNT1
	MOV		STACK_LINE_COUNT1,A
	MOV		A,LINE_COUNT2
	MOV		STACK_LINE_COUNT2,A
;===========================================
;	LCM顯示
;===========================================	
	CALL	CLEAR_LCM
MAIN_INT3:
	MOV		A,80H			;設定顯示第一列，位置0
	CALL	WLCMC
	CALL	DELAY
	MOV		A,HIGH 	TAB_DATA_5
	MOV		TBHP,A
	MOV		A,LOW 	TAB_DATA_5
	MOV		TBLP,A
	MOV		A,0AH
	MOV		LINE_COUNT1,A	;設定第一列字數
	MOV		A,04H
	MOV		LINE_COUNT2,A	;設定第二列字數
MAIN_INT3_1:
	TABRD	DATA
	MOV		A,DATA			;寫入顯示資料
	CALL	WLCMD
	CALL	DELAY
	INC		TBLP
	SDZ		LINE_COUNT1		;可顯示字數是否為0?
	JMP		MAIN_INT3_1			;不是0，繼續顯示下個字
	MOV		A,0C0H			;設定顯示第二列，位置0
	CALL	WLCMC
	CALL	DELAY
MAIN_INT3_2:
	TABRD	DATA
	MOV		A,DATA			;寫入顯示資料
	CALL	WLCMD
	CALL	DELAY
	INC		TBLP
	SDZ		LINE_COUNT2		;可顯示字數是否為0?
	JMP		MAIN_INT3_2			;不是0，繼續顯示下個字
;==========================================	
; 	歌曲撥放
;==========================================	
	CLR 	PCC.2
	MOV		A,HIGH TAB_PITCH_D
	MOV		TBHP,A
	MOV		A,LOW TAB_PITCH_D
	MOV		TBLP,A
NEXT_PITCH_D:
	TABRD	PITCH
	CLR		ACC
	XOR		A,TBLH
	SZ		Z
	JMP		END_INT3
	MOV		COUNT1,A
	INC		TBLP
LOOP_D:
	MOV		A,8
	MOV     COUNT2,A
H1_D:
	SET 	PC.2
	MOV 	A,PITCH
	CALL 	DELAY_BEEP
	CLR		PC.2
	MOV		A,PITCH
	CALL	DELAY_BEEP
	SDZ		COUNT2
	JMP		H1_D
	SDZ		COUNT1
	JMP		LOOP_D
	MOV 	A,20
	MOV		COUNT1,A
STOP_D:
	CALL	DELAY_BEEP
	SDZ		COUNT1
	JMP 	STOP_D
	JMP		NEXT_PITCH_D
END_INT3:
	CALL	CLEAR_LCM
	MOV		A,STACK_LINE_COUNT1
	MOV		LINE_COUNT1,A
	MOV		A,STACK_LINE_COUNT2
	MOV		LINE_COUNT2,A
	MOV		A,STACK_DATA
	MOV		DATA,A
	MOV		A,STACK_DEL3	;DEL3變數回復
	MOV		DEL3,A
	MOV		A,STACK_DEL2	;DEL2變數回復
	MOV		DEL2,A
	MOV		A,STACK_DEL1	;DEL1變數回復
	MOV		DEL1,A
	MOV		A,STACK_PSW		;MCU狀態回復
	MOV		STATUS,A
	MOV		A,STACK_A		;累加器資料回復
	CLR		INT3F
	RETI
INIT_LCM	PROC
	CLR		LCM_EN
	CLR		LCM_RW
	CLR		LCM_RS
	CLR		LCM_ENC
	CLR		LCM_RWC
	CLR		LCM_RSC
	CALL	DELAY
	MOV		A,38H
	CALL	WLCMC
	MOV		A,0FH
	CALL	WLCMC
	MOV		A,06H
	CALL	WLCMC
	MOV		A,01H
	CALL	WLCMC
	RET
INIT_LCM 	ENDP

WLCMD		PROC
	SET		DC_FLAG
	JMP		$+3
WLCMC:	
	CLR		DC_FLAG
	SET		LCM_DATAPORTC
	CLR		LCM_RS
	SET		LCM_RW
	NOP
	CALL	WAIT
	SET		LCM_EN
	NOP
	CALL	WAIT
WF:	
	SZ		LCM_DATAPORT.7
;	JMP		WF
	CLR		LCM_EN
	CLR		LCM_DATAPORTC
	MOV		LCM_DATAPORT,A
	CLR		LCM_RW
	CLR		LCM_RS
	SZ		DC_FLAG
	SET		LCM_RS
	SET		LCM_EN
	NOP
	CALL	WAIT
	CLR		LCM_EN
	RET
WLCMD		ENDP

CLEAR		PROC
	CLR		DATA
	CLR		TBHP
	CLR		TBLP
	CLR		COUNT1
	CLR		COUNT2
CLEAR		ENDP

CLEAR_LCM		PROC
	MOV		A,80H
	CALL	WLCMC
	CALL	DELAY
	MOV		A,0FH
	MOV		LINE_COUNT,A
CLEAR_LCM_1:
	MOV		A,20H
	CALL	WLCMD
	CALL	DELAY_BEEP
	SDZ		LINE_COUNT
	JMP		CLEAR_LCM_1
	MOV		A,0C0H
	CALL	WLCMC
	CALL	DELAY
	MOV		A,0FH
	MOV		LINE_COUNT,A
CLEAR_LCM_2:
	MOV		A,20H
	CALL	WLCMD
	CALL	DELAY
	SDZ		LINE_COUNT
	JMP		CLEAR_LCM_2
	MOV		A,80H
	CALL	WLCMC
	CALL	DELAY_BEEP
	RET
CLEAR_LCM		ENDP

DELAY_BEEP 	PROC
		MOV		DELA,A
DEL_A:	NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		NOP
		SDZ		DELA
		JMP		DEL_A
		RET
DELAY_BEEP ENDP

DELAY   	PROC
	MOV		A,2
    MOV     DEL1,A
DEL_1:  
	MOV     A,30
    MOV     DEL2,A
DEL_2:
    MOV     A,110
    MOV     DEL3,A
DEL_3:
    SDZ     DEL3
    JMP     DEL_3
    SDZ     DEL2
    JMP     DEL_2
    SDZ     DEL1
    JMP     DEL_1
    RET
DELAY   	ENDP
WAIT		PROC
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	RET
WAIT		ENDP

TAB_DATA_1:
	DC		57H		;"W"
	DC		61H		;"a"
	DC		69H		;"i"
	DC		74H		;"t"
	DC		69H		;"i"
	DC		6EH		;"n"
	DC		67H		;"g"
	DC		20H		;" "
	DC		66H		;"f"
	DC		6FH		;"o"
	DC		72H		;"r"
	DC		20H		;" "
	DC		73H		;"s"
	DC		77H		;"w"
	DC		69H		;"i"
	DC		74H		;"t"
	DC		63H		;"c"
	DC		68H		;"h"
	DC		20H		;" "
	DC		6FH		;"o"
	DC		6EH		;"n"
TAB_DATA_2:
	DC		4DH		;"M"
	DC		61H		;"a"
	DC		72H		;"r"
	DC		79H		;"y"
	DC		20H		;" "
	DC		68H		;"h"
	DC		61H		;"a"
	DC		64H		;"d"
	DC		20H		;" "
	DC		61H		;"a"
	DC		20H		;" "
	DC		73H		;"s"
	DC		6DH		;"m"
	DC		61H		;"a"
	DC		6CH		;"l"
	DC		6CH		;"l"
	DC		20H		;" "
	DC		6CH		;"l"
	DC		69H		;"i"
	DC		74H		;"t"
	DC		74H		;"t"
	DC		6CH		;"l"
	DC		65H		;"e"
	DC		20H		;" "
	DC		6CH		;"l"
	DC		61H		;"a"
	DC		6DH		;"m"
	DC		62H		;"b"
TAB_DATA_3:
	DC		46H		;"F"
	DC		61H		;"a"
	DC		6DH		;"m"
	DC		69H		;"i"
	DC		6CH		;"l"
	DC		79H		;"y"
	DC		20H		;""
	DC		4DH		;"M"
	DC		61H		;"a"
	DC		72H		;"r"
	DC		74H		;"t"
TAB_DATA_4:
	DC		54H		;"T"
	DC		77H		;"w"
	DC		69H		;"i"
	DC		6EH		;"n"
	DC		6BH		;"k"
	DC		6CH		;"l"
	DC		65H		;"e"
	DC		20H		;" "
	DC		54H		;"T"
	DC		77H		;"w"
	DC		69H		;"i"
	DC		6EH		;"n"
	DC		6BH		;"k"
	DC		6CH		;"l"
	DC		65H		;"e"
	DC		6CH		;"l"
	DC		69H		;"i"
	DC		74H		;"t"
	DC		74H		;"t"
	DC		6CH		;"l"
	DC		65H		;"e"
	DC		20H		;" "
	DC		73H		;"s"
	DC		74H		;"t"
	DC		61H		;"a"
	DC		72H		;"r"
TAB_DATA_5:
	DC		43H		;"C"
	DC		61H		;"a"
	DC		74H		;"t"
	DC		63H		;"c"
	DC		68H		;"h"
	DC		20H		;" "
	DC		74H		;"t"
	DC		68H		;"h"
	DC		65H		;"e"
	DC		20H		;" "
	DC		65H		;"e"
	DC		65H		;"e"
	DC		6CH		;"l"
	DC		73H		;"s"
TAB_PITCH_A:									;綿羊
	DC	200000/(1318*2)+(1318/(2*10)) 	SHL 8  	;MI. 3.
	DC	200000/(587*2)+(587/(2*10)) 	SHL 8  	;RE 2
	DC	200000/(523*2)+(523/(2*10)) 	SHL 8  	;DO 1
	DC	200000/(587*2)+(587/(2*10)) 	SHL 8  	;RE 2
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(659*2)+(659/(10)) 		SHL 8  	;MI 3
	DC	200000/(587*2)+(587/(2*10)) 	SHL 8  	;RE 2
	DC	200000/(587*2)+(587/(2*10)) 	SHL 8  	;RE 2
	DC	200000/(587*2)+(587/(10)) 		SHL 8  	;RE 2
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(785*2)+(785/(10)) 		SHL 8  	;SO 5
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI	3
	DC	200000/(587*2)+(587/(2*10)) 	SHL 8  	;RE 2
	DC	200000/(523*2)+(523/(2*10)) 	SHL 8  	;DO 1
	DC	200000/(587*2)+(587/(2*10)) 	SHL 8  	;RE 2
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(659*2)+(659/(10)) 		SHL 8  	;MI 3
	DC	200000/(523*2)+(523/(2*10)) 	SHL 8  	;DO 1
	DC	200000/(587*2)+(587/(4*10)) 	SHL 8  	;RE 2
	DC	200000/(587*2)+(587/(4*10)) 	SHL 8  	;RE 2
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(587*2)+(587/(2*10)) 	SHL 8  	;RE 2
	DC	200000/(523*2)+(523/(5)) 		SHL 8  	;DO 1
	DC 	0
TAB_PITCH_B:									;全家
	DC	200000/(1318*2)+(1318/(2*10)) 	SHL 8  	;MI. 3.
	DC	200000/(1047*2)+(1047/(2*10)) 	SHL 8  	;DO. 1.
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(1047*2)+(1047/(2*10)) 	SHL 8  	;DO. 1.
	DC	200000/(1174*2)+(1174/(2*10)) 	SHL 8  	;RE. 2.
	DC	200000/(1570*2)+(1570/(10)) 	SHL 8  	;SO. 5.
	DC	200000/(1174*2)+(1174/(2*10)) 	SHL 8  	;RE. 2.
	DC	200000/(1318*2)+(1318/(2*10)) 	SHL 8  	;MI. 3.
	DC	200000/(1174*2)+(1174/(2*10)) 	SHL 8  	;RE. 2.
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(1047*2)+(1047/(2*10)) 	SHL 8  	;DO. 1.
	DC 	0
TAB_PITCH_C:
	DC	200000/(523*2)+(523/(2*10)) 	SHL 8  	;DO 1
	DC	200000/(523*2)+(523/(2*10)) 	SHL 8  	;DO 1
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(880*2)+(880/(2*10)) 	SHL 8  	;LA 6
	DC	200000/(880*2)+(880/(2*10)) 	SHL 8  	;LA 6
	DC	200000/(785*2)+(785/(10)) 	SHL 8  	;SO 5
	DC	200000/(698*2)+(698/(2*10)) 	SHL 8  	;FA 4
	DC	200000/(698*2)+(698/(2*10)) 	SHL 8  	;FA 4
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(587*2)+(587/(2*10)) 	SHL 8  	;RE 2
	DC	200000/(587*2)+(587/(2*10)) 	SHL 8  	;RE 2
	DC	200000/(523*2)+(523/(10)) 	SHL 8  	;DO 1
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(698*2)+(698/(2*10)) 	SHL 8  	;FA 4
	DC	200000/(698*2)+(698/(2*10)) 	SHL 8  	;FA 4
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(587*2)+(587/(10)) 	SHL 8  	;RE 2
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(698*2)+(698/(2*10)) 	SHL 8  	;FA 4
	DC	200000/(698*2)+(698/(2*10)) 	SHL 8  	;FA 4
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(587*2)+(587/(10)) 	SHL 8  	;RE 2
	DC	200000/(523*2)+(523/(2*10)) 	SHL 8  	;DO 1
	DC	200000/(523*2)+(523/(2*10)) 	SHL 8  	;DO 1
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(880*2)+(880/(2*10)) 	SHL 8  	;LA 6
	DC	200000/(880*2)+(880/(2*10)) 	SHL 8  	;LA 6
	DC	200000/(785*2)+(785/(10)) 	SHL 8  	;SO 5
	DC	200000/(698*2)+(698/(2*10)) 	SHL 8  	;FA 4
	DC	200000/(698*2)+(698/(2*10)) 	SHL 8  	;FA 4
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(587*2)+(587/(2*10)) 	SHL 8  	;RE 2
	DC	200000/(587*2)+(587/(2*10)) 	SHL 8  	;RE 2
	DC	200000/(523*2)+(523/(10)) 	SHL 8  	;DO 1
	DC	0
TAB_PITCH_D:
	DC	200000/(880*2)+(880/(2*10)) 	SHL 8  	;LA 6
	DC	200000/(1760*2)+(1760/(4*10)) 	SHL 8  	;LA. 6.
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(880*2)+(880/(4*10)) 	SHL 8  	;LA 6
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(659*2)+(659/(4*10)) 	SHL 8  	;MI 3
	DC	200000/(659*2)+(659/(4*10)) 	SHL 8  	;MI 3
	DC	200000/(587*2)+(587/(4*10)) 	SHL 8  	;RE 2
	DC	200000/(659*2)+(659/(10)) 	SHL 8  	;MI 3
	DC	200000/(587*2)+(587/(2*10)) 	SHL 8  	;RE 2
	DC	200000/(1174*2)+(1174/(4*10)) 	SHL 8  	;RE. 2.
	DC	200000/(523*2)+(523/(4*10)) 	SHL 8  	;DO 1
	DC	200000/(587*2)+(587/(4*10)) 	SHL 8  	;RE 2
	DC	200000/(587*2)+(587/(4*10)) 	SHL 8  	;RE 2
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(659*2)+(659/(4*10)) 	SHL 8  	;MI 3
	DC	200000/(659*2)+(659/(4*10)) 	SHL 8  	;MI 3
	DC	200000/(587*2)+(587/(4*10)) 	SHL 8  	;RE 2
	DC	200000/(659*2)+(659/(10)) 	SHL 8  	;MI 3
	DC	200000/(880*2)+(880/(2*10)) 	SHL 8  	;LA 6
	DC	200000/(1760*2)+(1760/(4*10)) 	SHL 8  	;LA. 6.
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(880*2)+(880/(4*10)) 	SHL 8  	;LA 6
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(698*2)+(698/(4*10)) 	SHL 8  	;FA 4
	DC	200000/(698*2)+(698/(4*10)) 	SHL 8  	;FA 4
	DC	200000/(659*2)+(659/(4*10)) 	SHL 8  	;MI 3
	DC	200000/(587*2)+(587/(4*10)) 	SHL 8  	;RE 2
	DC	200000/(659*2)+(659/(10)) 	SHL 8  	;MI 3
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(1570*2)+(1570/(4*10)) 	SHL 8  	;SO. 5.
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(988*2)+(988/(2*10)) 	SHL 8  	;SI 7
	DC	200000/(880*2)+(880/(4*10)) 	SHL 8  	;LA 6
	DC	200000/(880*2)+(880/(4*10)) 	SHL 8  	;LA 6
	DC	200000/(880*2)+(880/(4*10)) 	SHL 8  	;LA 6
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(880*2)+(880/(10)) 	SHL 8  	;LA 6
	DC	200000/(1047*2)+(1047/(2*10)) 	SHL 8  	;DO. 1.
	DC	200000/(1047*2)+(1047/(4*10)) 	SHL 8  	;DO. 1.
	DC	200000/(1047*2)+(1047/(4*10)) 	SHL 8  	;DO. 1.
	DC	200000/(988*2)+(988/(2*10)) 	SHL 8  	;SI 7
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(880*2)+(880/(4*10)) 	SHL 8  	;LA 6
	DC	200000/(880*2)+(880/(4*10)) 	SHL 8  	;LA 6
	DC	200000/(880*2)+(880/(4*10)) 	SHL 8  	;LA 6
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(1760*2)+(1760/(4*10)) 	SHL 8  	;LA. 6.
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(659*2)+(659/(2*10)) 	SHL 8  	;MI 3
	DC	200000/(785*2)+(785/(2*10)) 	SHL 8  	;SO 5
	DC	200000/(1570*2)+(1570/(4*10)) 	SHL 8  	;SO. 5.
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(988*2)+(988/(2*10)) 	SHL 8  	;SI 7
	DC	200000/(880*2)+(880/(4*10)) 	SHL 8  	;LA 6
	DC	200000/(880*2)+(880/(4*10)) 	SHL 8  	;LA 6
	DC	200000/(880*2)+(880/(4*10)) 	SHL 8  	;LA 6
	DC	200000/(785*2)+(785/(4*10)) 	SHL 8  	;SO 5
	DC	200000/(880*2)+(880/(10)) 	SHL 8  	;LA 6
	DC	0
END	
	
	